{
  "stats": {
    "suites": 5,
    "tests": 14,
    "passes": 13,
    "pending": 0,
    "failures": 1,
    "start": "2023-02-08T21:41:06.277Z",
    "end": "2023-02-08T21:41:26.974Z",
    "duration": 12930,
    "testsRegistered": 14,
    "passPercent": 92.85714285714286,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "751967aa-395a-4ea3-9ba0-c247e5a30789",
      "title": "",
      "fullFile": "cypress\\tests\\deleteTodo.test.js",
      "file": "cypress\\tests\\deleteTodo.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f2414ee7-1644-4525-af3e-71111eb2810e",
          "title": "delete todo endpoints",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should check todo delete header and status when successfully",
              "fullTitle": "delete todo endpoints should check todo delete header and status when successfully",
              "timedOut": null,
              "duration": 2409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.validateMutationHeader({\n    id: todo.todoForDelete.id,\n    method: _resources.METHODS.DELETE\n  });\n  _utils.todosEndpoint.expectMutationHaveStatus({\n    status: 200,\n    id: todo.todoForDelete.id,\n    method: _resources.METHODS.DELETE\n  });\n});",
              "err": {},
              "uuid": "91ef5465-1ca8-4751-9d86-877b7fccdae7",
              "parentUUID": "f2414ee7-1644-4525-af3e-71111eb2810e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete a todo successfully",
              "fullTitle": "delete todo endpoints should delete a todo successfully",
              "timedOut": null,
              "duration": 777,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.expectSuccessfullyDelete(todo.todoForDelete.id);\n});",
              "err": {},
              "uuid": "db65488c-cc43-4b7c-ba68-3537090852fe",
              "parentUUID": "f2414ee7-1644-4525-af3e-71111eb2810e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91ef5465-1ca8-4751-9d86-877b7fccdae7",
            "db65488c-cc43-4b7c-ba68-3537090852fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3186,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c9dc1a41-c202-4917-aa42-dee5beca5851",
      "title": "",
      "fullFile": "cypress\\tests\\getAllTodos.test.js",
      "file": "cypress\\tests\\getAllTodos.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "69f96c99-1a00-4c77-9ca6-d1452f2ee23f",
          "title": "get all todo endpoints",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get a valid response",
              "fullTitle": "get all todo endpoints should get a valid response",
              "timedOut": null,
              "duration": 933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_utils.todosEndpoint.validateQueryHeader();\n_utils.todosEndpoint.expectQueryHaveStatus(200);",
              "err": {},
              "uuid": "5cbdb805-1a34-48f8-9cc1-47cc88bc69f2",
              "parentUUID": "69f96c99-1a00-4c77-9ca6-d1452f2ee23f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should response length be correct",
              "fullTitle": "get all todo endpoints should response length be correct",
              "timedOut": null,
              "duration": 447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_utils.todosEndpoint.getAllQueryExpectLength(150);",
              "err": {},
              "uuid": "0616fa5c-b77d-4bb2-825e-ee4743d0612b",
              "parentUUID": "69f96c99-1a00-4c77-9ca6-d1452f2ee23f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should response length not be correct",
              "fullTitle": "get all todo endpoints should response length not be correct",
              "timedOut": null,
              "duration": 504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_utils.todosEndpoint.getAllQueryExpectLength(151, true);",
              "err": {},
              "uuid": "e8719c8f-c496-45a4-9928-f7ace9766ff5",
              "parentUUID": "69f96c99-1a00-4c77-9ca6-d1452f2ee23f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cbdb805-1a34-48f8-9cc1-47cc88bc69f2",
            "0616fa5c-b77d-4bb2-825e-ee4743d0612b",
            "e8719c8f-c496-45a4-9928-f7ace9766ff5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1884,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6239239c-35af-4a65-8a60-e4dc542f8f96",
      "title": "",
      "fullFile": "cypress\\tests\\getTodoById.test.js",
      "file": "cypress\\tests\\getTodoById.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "082d3090-391c-42f9-86d6-7683a28a5bf2",
          "title": "get quote by id endpoints",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get a valid response",
              "fullTitle": "get quote by id endpoints should get a valid response",
              "timedOut": null,
              "duration": 1022,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.validateQueryHeader(todo.todoForGetById.id);\n  _utils.todosEndpoint.expectQueryHaveStatus(200, todo.todoForGetById.id);\n});",
              "err": {},
              "uuid": "c09408ee-9dc2-4502-8552-1dd1f7d67942",
              "parentUUID": "082d3090-391c-42f9-86d6-7683a28a5bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have author property in response",
              "fullTitle": "get quote by id endpoints should have author property in response",
              "timedOut": null,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.expectGetByIdHaveProperty(todo.todoForGetById.id, 'completed');\n});",
              "err": {},
              "uuid": "1843fe88-4a30-40ef-91c8-fb102c3e0fc7",
              "parentUUID": "082d3090-391c-42f9-86d6-7683a28a5bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get by id response not null",
              "fullTitle": "get quote by id endpoints should get by id response not null",
              "timedOut": null,
              "duration": 1461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.expectGetByIdResponseNotNull(todo.todoForGetById.id);\n});",
              "err": {},
              "uuid": "3493abef-99af-4ff2-868f-d05737a32851",
              "parentUUID": "082d3090-391c-42f9-86d6-7683a28a5bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get a 404 status and null response",
              "fullTitle": "get quote by id endpoints should get a 404 status and null response",
              "timedOut": null,
              "duration": 536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_utils.todosEndpoint.expectQueryHaveStatus(404, '160');",
              "err": {},
              "uuid": "257cfc14-0021-47a0-a287-ab74247e789d",
              "parentUUID": "082d3090-391c-42f9-86d6-7683a28a5bf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c09408ee-9dc2-4502-8552-1dd1f7d67942",
            "1843fe88-4a30-40ef-91c8-fb102c3e0fc7",
            "3493abef-99af-4ff2-868f-d05737a32851",
            "257cfc14-0021-47a0-a287-ab74247e789d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3513,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d3c0cc6f-d2d8-4cb3-9e45-ae870d3cf5f6",
      "title": "",
      "fullFile": "cypress\\tests\\postTodo.test.js",
      "file": "cypress\\tests\\postTodo.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1e5b7483-b73c-4039-95e8-76ab4ed307ed",
          "title": "post todo endpoints",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should check todo post header and status when successfully",
              "fullTitle": "post todo endpoints should check todo post header and status when successfully",
              "timedOut": null,
              "duration": 986,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.validateMutationHeader({\n    body: todo.todoForPost\n  });\n  _utils.todosEndpoint.expectMutationHaveStatus({\n    status: 200,\n    body: todo.todoForPost\n  });\n});",
              "err": {},
              "uuid": "16be277c-f18a-4581-a871-eb656f79ea75",
              "parentUUID": "1e5b7483-b73c-4039-95e8-76ab4ed307ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should post a todo successfully",
              "fullTitle": "post todo endpoints should post a todo successfully",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.expectSuccessfullyPost(todo.todoForPost);\n});",
              "err": {},
              "uuid": "c2e6e12d-51d6-430d-af93-55a2b1cca3f4",
              "parentUUID": "1e5b7483-b73c-4039-95e8-76ab4ed307ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have status wrong",
              "fullTitle": "post todo endpoints should have status wrong",
              "timedOut": null,
              "duration": 413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_utils.todosEndpoint.expectMutationHaveStatus({\n  status: 400,\n  body: {}\n});",
              "err": {},
              "uuid": "5e1e55ac-2079-4134-b857-037e6a2c0b5a",
              "parentUUID": "1e5b7483-b73c-4039-95e8-76ab4ed307ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16be277c-f18a-4581-a871-eb656f79ea75",
            "c2e6e12d-51d6-430d-af93-55a2b1cca3f4",
            "5e1e55ac-2079-4134-b857-037e6a2c0b5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1829,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f7b0da75-6b9a-4c2a-8ffd-9759c1ec9722",
      "title": "",
      "fullFile": "cypress\\tests\\putTodo.test.js",
      "file": "cypress\\tests\\putTodo.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f5f96ddc-32c7-406c-a830-c4320ee509bc",
          "title": "put todo endpoints",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should check todo put header and status when successfully",
              "fullTitle": "put todo endpoints should check todo put header and status when successfully",
              "timedOut": null,
              "duration": 2043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.validateMutationHeader({\n    body: {\n      completed: todo.todoForPut.completed,\n      userId: todo.todoForPut.userId\n    },\n    id: todo.todoForPost.id,\n    method: _resources.METHODS.PUT\n  });\n  _utils.todosEndpoint.expectMutationHaveStatus({\n    status: 200,\n    id: todo.todoForPost.id,\n    body: {\n      completed: todo.todoForPut.completed,\n      userId: todo.todoForPut.userId\n    },\n    method: _resources.METHODS.PUT\n  });\n});",
              "err": {},
              "uuid": "eafd0692-e817-4b48-b9ad-5b74aa536da7",
              "parentUUID": "f5f96ddc-32c7-406c-a830-c4320ee509bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should put a todo successfully",
              "fullTitle": "put todo endpoints should put a todo successfully",
              "timedOut": null,
              "duration": 475,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.expectSuccessfullyPut(todo.todoForPut.id, {\n    completed: todo.todoForPut.completed,\n    userId: todo.todoForPut.userId\n  });\n});",
              "err": {
                "message": "AssertionError: Target cannot be null or undefined.",
                "estack": "AssertionError: Target cannot be null or undefined.\n    at getRet (http://localhost:53415/__cypress/runner/cypress_runner.js:132362:20)\n    at tryCatcher (http://localhost:53415/__cypress/runner/cypress_runner.js:9065:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:53415/__cypress/runner/cypress_runner.js:6339:29)\n    at Context.thenFn (http://localhost:53415/__cypress/runner/cypress_runner.js:132380:26)\n    at Context.then (http://localhost:53415/__cypress/runner/cypress_runner.js:132819:21)\n    at Context.<anonymous> (http://localhost:53415/__cypress/runner/cypress_runner.js:144927:21)\n    at http://localhost:53415/__cypress/runner/cypress_runner.js:144402:33\n    at tryCatcher (http://localhost:53415/__cypress/runner/cypress_runner.js:9065:23)\n    at Promise._settlePromiseFromHandler (http://localhost:53415/__cypress/runner/cypress_runner.js:7000:31)\n    at Promise._settlePromise (http://localhost:53415/__cypress/runner/cypress_runner.js:7057:18)\n    at Promise._settlePromiseCtx (http://localhost:53415/__cypress/runner/cypress_runner.js:7094:10)\n    at _drainQueueStep (http://localhost:53415/__cypress/runner/cypress_runner.js:3776:12)\n    at _drainQueue (http://localhost:53415/__cypress/runner/cypress_runner.js:3765:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:53415/__cypress/runner/cypress_runner.js:3781:5)\n    at Async.drainQueues (http://localhost:53415/__cypress/runner/cypress_runner.js:3651:14)",
                "diff": null
              },
              "uuid": "a2041da7-5152-476b-be26-f0d41c7f3a6c",
              "parentUUID": "f5f96ddc-32c7-406c-a830-c4320ee509bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eafd0692-e817-4b48-b9ad-5b74aa536da7"
          ],
          "failures": [
            "a2041da7-5152-476b-be26-f0d41c7f3a6c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2518,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}