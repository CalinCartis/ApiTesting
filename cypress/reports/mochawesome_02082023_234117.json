{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-08T21:41:14.401Z",
    "end": "2023-02-08T21:41:17.965Z",
    "duration": 3564,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6239239c-35af-4a65-8a60-e4dc542f8f96",
      "title": "",
      "fullFile": "cypress\\tests\\getTodoById.test.js",
      "file": "cypress\\tests\\getTodoById.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "082d3090-391c-42f9-86d6-7683a28a5bf2",
          "title": "get quote by id endpoints",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get a valid response",
              "fullTitle": "get quote by id endpoints should get a valid response",
              "timedOut": null,
              "duration": 1022,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.validateQueryHeader(todo.todoForGetById.id);\n  _utils.todosEndpoint.expectQueryHaveStatus(200, todo.todoForGetById.id);\n});",
              "err": {},
              "uuid": "c09408ee-9dc2-4502-8552-1dd1f7d67942",
              "parentUUID": "082d3090-391c-42f9-86d6-7683a28a5bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have author property in response",
              "fullTitle": "get quote by id endpoints should have author property in response",
              "timedOut": null,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.expectGetByIdHaveProperty(todo.todoForGetById.id, 'completed');\n});",
              "err": {},
              "uuid": "1843fe88-4a30-40ef-91c8-fb102c3e0fc7",
              "parentUUID": "082d3090-391c-42f9-86d6-7683a28a5bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get by id response not null",
              "fullTitle": "get quote by id endpoints should get by id response not null",
              "timedOut": null,
              "duration": 1461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _fixtures.mockData)(function (todo) {\n  _utils.todosEndpoint.expectGetByIdResponseNotNull(todo.todoForGetById.id);\n});",
              "err": {},
              "uuid": "3493abef-99af-4ff2-868f-d05737a32851",
              "parentUUID": "082d3090-391c-42f9-86d6-7683a28a5bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get a 404 status and null response",
              "fullTitle": "get quote by id endpoints should get a 404 status and null response",
              "timedOut": null,
              "duration": 536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_utils.todosEndpoint.expectQueryHaveStatus(404, '160');",
              "err": {},
              "uuid": "257cfc14-0021-47a0-a287-ab74247e789d",
              "parentUUID": "082d3090-391c-42f9-86d6-7683a28a5bf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c09408ee-9dc2-4502-8552-1dd1f7d67942",
            "1843fe88-4a30-40ef-91c8-fb102c3e0fc7",
            "3493abef-99af-4ff2-868f-d05737a32851",
            "257cfc14-0021-47a0-a287-ab74247e789d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3513,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}